name: Terraform PR Checks

on:
  pull_request:
    branches:
      - dev
      - main

permissions:
  contents: write

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      terraform2_changed: ${{ steps.filter.outputs.terraform2 }}
      terraform1_changed: ${{ steps.filter.outputs.terraform1 }}
    steps:
      - uses: actions/checkout@v3

      - name: Filter paths for terraform projects
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            terraform1:
              - 'terraform1/**'
            terraform2:
              - 'terraform2/**'
            

  terraform2_lint:
    needs: filter
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform2_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v1

      - name: Terraform Init
        run: terraform -chdir=terraform2 init 

      - name: Run tflint and terraform fmt check
        run: |
          cd terraform2
          tflint
          terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=terraform2 validate

      - name: Comment lint/fmt/validate results on PR
        if: failure()
        uses: GetTerminus/terraform-pr-commenter@v1

  terraform2_security_scan:
    needs: terraform2_lint
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform2_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform -chdir=terraform2 init

      - name: Run tfsec scan and comment
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tfsec_args: --soft-fail

  terraform2_plan:
    needs: [terraform2_lint, terraform2_security_scan]
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform2_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform  -chdir=terraform2 init 

      - name: Terraform Plan
        run: terraform -chdir=terraform2 plan 

      - name: Comment Terraform Plan
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          comment: true
  
  terraform1_lint:
    needs: filter
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform1_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v1

      - name: Terraform Init
        run: terraform -chdir=terraform1 init 

      - name: Run tflint and terraform fmt check
        run: |
          cd terraform1
          tflint
          terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=terraform1 validate

      - name: Comment lint/fmt/validate results on PR
        if: failure()
        uses: GetTerminus/terraform-pr-commenter@v1

  terraform1_security_scan:
    needs: terraform2_lint
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform1_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform -chdir=terraform1 init 

      - name: Run tfsec scan and comment
        uses: aquasecurity/tfsec-pr-commenter-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tfsec_args: --soft-fail

  terraform1_plan:
    needs: [terraform1_lint, terraform1_security_scan]
    runs-on: ubuntu-latest
    if: needs.filter.outputs.terraform2_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform -chdir=terraform1 init 

      - name: Terraform Plan
        run: terraform -chdir=terraform1 plan 

      - name: Comment Terraform Plan
        uses: GetTerminus/terraform-pr-commenter@v1
        with:
          comment: true